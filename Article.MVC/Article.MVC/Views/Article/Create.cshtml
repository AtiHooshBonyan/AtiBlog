@model Article.MVC.Models.DomainModels.ArticlePost

@{
    ViewData["Title"] = "Create New Article";
}

<div class="container mt-4">
    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <h2 class="mb-0"><i class="fas fa-plus-circle mr-2"></i>Create New Article</h2>
        </div>
        <div class="card-body">
            <form asp-action="Create" class="needs-validation" novalidate enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                <div class="row">
                    <div class="col-md-8">
                        <div class="form-group">
                            <label asp-for="Title" class="font-weight-bold"></label>
                            <input asp-for="Title" class="form-control" placeholder="Enter article title" required />
                            <span asp-validation-for="Title" class="text-danger"></span>
                            <div class="invalid-feedback">Please provide a title.</div>
                        </div>

                        <div class="form-group">
                            <label asp-for="Content" class="font-weight-bold"></label>
                            <textarea asp-for="Content" class="form-control" rows="8" placeholder="Write your content here..." required></textarea>
                            <span asp-validation-for="Content" class="text-danger"></span>
                            <div class="invalid-feedback">Content is required.</div>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="ImagePath" class="font-weight-bold">Featured Image</label>
                            <div class="custom-file">
                                <input type="file" class="custom-file-input" id="imageUpload" asp-for="ImagePath">
                                <label class="custom-file-label" for="imageUpload">Choose file</label>
                            </div>
                            <small class="form-text text-muted">Recommended size: 1200x630px</small>
                            <span asp-validation-for="ImagePath" class="text-danger"></span>
                            <div class="image-preview mt-2" id="imagePreview" style="display:none;">
                                <img class="img-thumbnail" id="previewImage" src="#" alt="Preview" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label asp-for="VideoUrl" class="font-weight-bold">Video URL</label>
                            <input asp-for="VideoUrl" class="form-control" placeholder="https://youtube.com/watch?v=..." />
                            <span asp-validation-for="VideoUrl" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="PublishedAt" class="form-label">
                                <i class="fas fa-sync-alt"></i> Published Date
                            </label>
                            <input asp-for="PublishedAt" class="form-control" type="datetime-local"
                                   value="@DateTime.Now.ToString()" readonly />
                            <span asp-validation-for="PublishedAt" class="validation-error"></span>
                        </div>

                        
                    </div>
                </div>

                <div class="form-group mt-4">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save mr-2"></i>Create Article
                    </button>
                    <a asp-action="Index" class="btn btn-outline-secondary ml-2">
                        <i class="fas fa-arrow-left mr-2"></i>Back to List
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://cdn.ckeditor.com/4.16.2/full-all/ckeditor.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

    <script>
        // Initialize CKEditor with enhanced configuration
        CKEDITOR.replace('contentEditor', {
            extraPlugins: 'autogrow,filebrowser,image2,uploadimage',
            removePlugins: 'resize',
            autoGrow_minHeight: 300,
            autoGrow_maxHeight: 800,
            autoGrow_bottomSpace: 50,
            filebrowserUploadUrl: '/Upload/UploadImage',
            filebrowserBrowseUrl: '/Upload/BrowseImages',
            toolbar: [
                { name: 'document', items: ['Source', '-', 'Save', 'NewPage', 'Preview', 'Print', '-', 'Templates'] },
                { name: 'clipboard', items: ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo'] },
                { name: 'editing', items: ['Find', 'Replace', '-', 'SelectAll', '-', 'Scayt'] },
                { name: 'forms', items: ['Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton', 'HiddenField'] },
                '/',
                { name: 'basicstyles', items: ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'CopyFormatting', 'RemoveFormat'] },
                { name: 'paragraph', items: ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl'] },
                { name: 'links', items: ['Link', 'Unlink', 'Anchor'] },
                { name: 'insert', items: ['Image', 'Flash', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe'] },
                '/',
                { name: 'styles', items: ['Styles', 'Format', 'Font', 'FontSize'] },
                { name: 'colors', items: ['TextColor', 'BGColor'] },
                { name: 'tools', items: ['Maximize', 'ShowBlocks'] },
                { name: 'about', items: ['About'] }
            ],
            skin: 'moono-lisa',
            contentsCss: ['/css/ckeditor-content.css'],
            height: '500px',
            removeDialogTabs: 'image:advanced;link:advanced',
            format_tags: 'p;h1;h2;h3;pre',
            removeButtons: 'Underline,Subscript,Superscript',
            extraAllowedContent: '*(*);*{*}',
            enterMode: CKEDITOR.ENTER_BR,
            shiftEnterMode: CKEDITOR.ENTER_P,
            autoParagraph: false,
            fillEmptyBlocks: false
        });

        // Image preview functionality
        document.getElementById('imageUpload').addEventListener('change', function(e) {
            const file = e.target.files[0];
            const preview = document.getElementById('previewImage');
            const previewDiv = document.getElementById('imagePreview');

            if (file) {
                const reader = new FileReader();

                reader.onload = function(e) {
                    preview.src = e.target.result;
                    previewDiv.style.display = 'block';
                }

                reader.readAsDataURL(file);
                document.querySelector('.custom-file-label').textContent = file.name;
            } else {
                preview.src = "#";
                previewDiv.style.display = 'none';
                document.querySelector('.custom-file-label').textContent = "Choose file";
            }
        });

        // Form validation
        (function() {
            'use strict';
            window.addEventListener('load', function() {
                var forms = document.getElementsByClassName('needs-validation');
                Array.prototype.filter.call(forms, function(form) {
                    form.addEventListener('submit', function(event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();

        // Set default datetime values
        document.addEventListener('DOMContentLoaded', function() {
            const now = new Date();
            const formattedNow = now.toISOString().slice(0, 16);

            document.getElementById('PublishedAt').value = formattedNow;
        });
    </script>

    <!-- Include CKEditor for rich text editing -->
    <script src="https://cdn.ckeditor.com/4.16.2/standard/ckeditor.js"></script>
    <script>
        CKEDITOR.replace('Content');
    </script>
}